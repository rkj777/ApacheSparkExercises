val lines = sc.textFile("data_input")
val edges = lines.map(x=>x.split('\t'))
val coutableNodes = edges.map(x => (x(0),1))
val CountedNodes = coutableNodes.reduceByKey((a,b) => a +b)
val reverseCountedNodes = CountedNodes.map(x=>(x._2,x._1))
val nodesSameOutlinks = reverseCountedNodes.groupByKey()
val nodesMaxOutlinks = nodesSameOutlinks.max()
val result = nodesMaxOutlinks._2


